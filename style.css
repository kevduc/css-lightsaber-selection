/* Largely inspired from Kevin Powell https://codepen.io/kevinpowell/pen/jOygveP */

:root {
  --background: #1e1e1e;
  --lightness: 40%;
  --saturation: 100%;

  --blue: hsl(200 var(--saturation) var(--lightness));
  --green: hsl(115 var(--saturation) var(--lightness));
  --yellow: hsl(50 var(--saturation) var(--lightness));
  --orange: hsl(35 var(--saturation) var(--lightness));
  --purple: hsl(290 var(--saturation) var(--lightness));
  --red: hsl(0 var(--saturation) var(--lightness));

  --blade-color: white; /* Default saber color (used for all colors except darksaber) */
  --shadow-color: white; /* Default saber shadow color (used for darksaber only) */
}

*,
*::before,
*::after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  --gap: 1.5rem;
  --num-columns: 7;
  --reference-position: 4;
  --min-label-width: 6ch;

  margin: 0;
  user-select: none;
  min-height: 100vh;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  font-family: 'Source Sans Pro', sans-serif;
  color: #f5f5f5;
  background-color: var(--background);

  display: inline-grid;
  grid-template: 1fr / repeat(var(--num-columns), 1fr);
  place-items: center;
  padding: var(--gap);
  gap: var(--gap);
}

/* Hide radio buttons and checkboxes */
input {
  display: none;
}

/* Colors and Positions */

#blue + label,
#blue:checked ~ .lightsaber {
  --shadow-color: var(--blue);
  --position: 4;
}
#green + label,
#green:checked ~ .lightsaber {
  --shadow-color: var(--green);
  --position: 3;
}
#yellow + label,
#yellow:checked ~ .lightsaber {
  --shadow-color: var(--yellow);
  --position: 5;
}
#orange + label,
#orange:checked ~ .lightsaber {
  --shadow-color: var(--orange);
  --position: 6;
}
#purple + label,
#purple:checked ~ .lightsaber {
  --shadow-color: var(--purple);
  --position: 2;
}
#red + label,
#red:checked ~ .lightsaber {
  --shadow-color: var(--red);
  --position: 1;
}
#dark + label,
#dark:checked ~ .lightsaber {
  --blade-color: rgba(0 0 0 / 0.9);
  --position: 7;
}

/* Labels */

label:not(.handle) {
  grid-row: 1;
  grid-column: var(--position);
  cursor: pointer;

  text-transform: uppercase;
  text-align: center;
  font-weight: bold;
  font-size: max(2.2vw, 0.65rem);
  min-width: var(--min-label-width);

  text-shadow: 0 0 0.2rem rgba(0 0 0 / 1), 0 0 0.5rem rgba(0 0 0 / 1), 0 0 1rem rgba(0 0 0 / 0.5), 0 0 2rem rgba(0 0 0 / 0.2);

  transition: all 80ms ease-out, opacity 350ms ease-in 280ms, visibility 350ms ease-in 280ms;

  pointer-events: none;
  visibility: hidden;
  opacity: 0%;
}

#blue:checked ~ label:not(.handle) {
  transition-delay: 160ms; /* Faster because already positioned */
}

#on-off:not(:checked) ~ label:not(.handle) {
  transition-duration: 250ms; /* Labels disappear faster */
  transition-delay: 0ms; /* No delay to disappear */
}

#on-off:checked ~ label:not(.handle) {
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
}

/* Highlight for labels */
label:not(.handle):hover,
label:not(.handle):focus,
input:checked + label:not(.handle) {
  z-index: 99;
  color: var(--blade-color);
  text-shadow: 0 0 0.1rem var(--shadow-color), 0 0 0.2rem var(--shadow-color), 0 0 0.2rem var(--shadow-color),
    0 0 0.2rem var(--shadow-color), 0 0 0.5rem var(--shadow-color), 0 0 0.5rem var(--shadow-color),
    0 0 0.5rem var(--shadow-color), 0 0 1rem var(--shadow-color), 0 0 2rem var(--shadow-color);
}

/* Lightsaber */

.lightsaber {
  --resolved-position: var(--default-position, var(--position));
  --delta-position: calc(var(--resolved-position) - var(--reference-position));

  grid-column: var(--reference-position);
  grid-row: 1;
  position: relative;
  margin-top: calc(30vh + 3vw + 7em);

  transform: translateX(
    calc(var(--delta-position) * max((100vw - var(--gap)) / var(--num-columns), var(--min-label-width) + var(--gap) / 4))
  );
  /* transition: grid-column 200ms ease-out 100ms; */
  transition: transform 230ms cubic-bezier(0.2, 0.02, 0.33, 1.03);
}

#on-off:not(:checked) ~ .lightsaber {
  --default-position: var(--reference-position);
  transition-delay: 60ms; /* Gives time to start retracting the blade */
  transition-duration: 500ms; /* Slower to go back to reference position */
}

/* Handle */

.handle {
  display: block;
  cursor: pointer;

  width: calc(0.8vh + 0.35vw);
  height: calc(7.2vh + 3.15vw);
  min-width: 0.75rem;
  min-height: 6.5rem;

  border-radius: 0 0 100vw 100vw;

  box-shadow: inset 0 0 0.4rem -0.025rem black;

  background-image: linear-gradient(
    silver 0 10%,
    hsl(39 75% 50%) 0 14%,
    silver 0 15%,
    black 0 20%,
    silver 0 22%,
    black 0 25%,
    silver 0 27%,
    black 0 30%,
    silver 0 32%,
    black 0 35%,
    silver 0 37%,
    black 0 40%,
    silver 0 42%,
    black 0 45%,
    silver 0 47%,
    black 0 50%,
    silver 0 60%,
    hsl(39 75% 50%) 60% 80%,
    silver 0 100%
  );

  transition: box-shadow 150ms ease-out 350ms;
}

#on-off:checked ~ .lightsaber > .handle {
  box-shadow: inset 0 0 0.15rem 0.07rem rgba(0 0 0 / 0.6);
}

/* Blade */

.blade {
  position: absolute;
  bottom: calc(100% - 0.15rem);

  --height: 350%; /* Used for on state */
  height: 0;
  width: 100%;
  border-radius: 100vw 100vw 100vw 100vw / 100vw 100vw 40vw 40vw;

  background-color: var(--blade-color);
  box-shadow: inset 0 0 0.2rem var(--shadow-color), 0 0 0.5rem var(--shadow-color), 0 0 1rem var(--shadow-color),
    0 0 1.5rem var(--shadow-color), 0 0 2rem var(--shadow-color), 0 0 4rem var(--shadow-color), 0 0 5rem var(--shadow-color),
    0 0 10rem var(--shadow-color), 0 0 15rem var(--shadow-color), 0 0 20rem var(--shadow-color);

  transition: height 130ms cubic-bezier(0.4, 0, 0.8, 0.1) 250ms, box-shadow 350ms ease-out, background-color 350ms ease-out;
  transform-origin: bottom;
}

#blue:checked ~ .lightsaber > .blade {
  transition-delay: 90ms; /* Quicker feedback to avoid user from clicking a second time */
}

/* Slightly different shape for the darksaber blade */
#dark:checked ~ .lightsaber > .blade {
  border-radius: 100% 50% 50% 50% / 100% 0.5rem 0.4rem 0.4rem;
}

#on-off:not(:checked) ~ .lightsaber > .blade {
  transition-timing-function: cubic-bezier(0.1, 0.35, 0.4, 1); /* Slow start to retract */
  /* transition-duration: 150ms; */
  transition-delay: 0ms; /* No delay to retract */
}

#on-off:checked ~ .lightsaber > .blade {
  height: var(--height);
}
